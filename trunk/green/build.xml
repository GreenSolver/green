<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--
  build.xml - The Green solver build script

  Public targets:
    build (default)   compile classes
    test              run all unit tests
    clean             remove the files generated by the build process
-->

<project name="green" default="build" basedir=".">

<!--
    Settings
-->

    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    <path id="green.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/junit_4.8.2.jar"/>
        <pathelement location="lib/org.hamcrest.core_1.1.0.jar"/>
    </path>

<!--
    Initialization
-->

    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="test">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>

<!--
    TARGET: clean
-->

    <target name="clean">
        <delete dir="bin"/>
    </target>

    <target name="cleanall" depends="clean"/>

<!--
    TARGET: build
-->

    <target name="build" depends="build-subprojects,build-project"/>

    <target name="build-subprojects"/>

    <target name="build-project" depends="init">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="green.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="test"/>
            <classpath refid="green.classpath"/>
        </javac>
    </target>

<!--
    TARGET: test
-->

    <target name="test">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="za.ac.sun.cs.green.EntireSuite" todir="${junit.output.dir}"/>
            <classpath refid="green.classpath"/>
        </junit>
    </target>

    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>

</project>
